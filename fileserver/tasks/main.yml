---
# tasks file for fileserver
- name: Import facts
  import_tasks: "../../default_facts/default_facts.yml"

- name: "Install packages: {{ packages | join(', ') }}"
  dnf:
     name: "{{ packages }}"
     state: latest

- name: "Create export folders"
  file:
    path: "{{ item.path }}"
    state: directory
  loop: "{{ exports }}"

- block:
  - name: "Create volumes"
    lvol:
        vg: "{{ system_volume_group }}"
        lv: "{{ item.path[1:] | replace('/', '_') }}"
        size: "{{ item.size }}"
        shrink: false
    loop:
        "{{ exports }}"

  - name: "Create filesystems"
    filesystem:
        fstype: xfs
        dev: "/dev/{{ system_volume_group }}/{{ item.path[1:] | replace('/', '_') }}"
    loop:
        "{{ exports }}"

  - name: "Mount filesystems"
    mount:
        path: "{{ item.path }}"
        src: "/dev/{{ system_volume_group }}/{{ item.path[1:] | replace('/', '_') }}"
        fstype: xfs
        state: mounted
    loop:
        "{{ exports }}"
  when: system_volume_group is defined

- name: "Set permissions"
  file:
    path: "{{ item.path }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(2775) }}"
  loop: "{{ exports }}"

- name: "Create services on {{ ipa_server }}"
  ipa_service:
    name: "{{ item }}/{{ ansible_fqdn }}"
    ipa_host: "{{ ipa_server }}"
  loop:
    - cifs
    - nfs
  environment:
    KRB5_CLIENT_KTNAME: /etc/krb5.keytab
    http_proxy: ""
    https_proxy: ""

- name: "Get samba keytab"
  shell:
    cmd: |
        kinit -k
        ipa-getkeytab -p cifs/{{ ansible_fqdn }} -k /etc/samba/krb5.keytab
        kdestroy
    creates: /etc/samba/krb5.keytab

- name: "Find nfs/{{ ansible_fqdn }} in /etc/krb5.keytab"
  shell:
    cmd: "echo -e 'rkt /etc/krb5.keytab\nlist' | ktutil | grep -q nfs/"
  register: find_service_nfs
  failed_when: no
  changed_when: no

- name: "Get NFS keytab"
  shell:
    cmd: |
        kinit -k
        ipa-getkeytab -p nfs/{{ ansible_fqdn }} -k /etc/krb5.keytab
        kdestroy
  when: find_service_nfs.rc != 0

- name: "Install samba.conf"
  template:
    src: smb.conf
    dest: /etc/samba/smb.conf
  notify: restart_samba

- name: "Set domain SID"
  shell: |
    kinit -k
    SID=$( ipa trustconfig-show --raw | awk '/ipantsecurityidentifier/ { print $2; }' )
    if ! net getdomainsid | grep $SID ; then
      net setdomainsid $SID
    fi
    kdestroy
  register: set_sid
  changed_when: set_sid.stdout == ""

- name: "Install preexec scripts"
  copy:
    src: create-personal-folder.sh
    dest: /usr/local/bin
    mode: 0775

- name: "Install /etc/exports"
  template:
    src: exports
    dest: /etc/exports
  notify: exportfs

- name: "Create automount keys"
  ipaautomountkey:
    ipaadmin_password: "{{ ipaadmin_password }}"
    location: "{{ automount_location }}"
    mapname: "{{ automount_map }}"
    key: "{{ item.automount_key }}"
    info: "-soft,rsize=65536,wsize=65536,timeo=50 {{ ansible_fqdn }}:{{ item.path }}"
    state: present
  loop: "{{ exports }}"
  when: ipaadmin_password is defined

- name: "Create .desktop files"
  template:
    src: share.directory
    dest: "{{ item.path }}/.directory"
  when: item.icon is defined or icon.description is defined
  loop: "{{ exports }}"

- name: "Create SMB preexec hint"
  copy:
    dest: "{{ item.path }}/.smb-preexec-hint"
    content: |
        # Connect to this share to invoke preexec script
        //{{ ansible_fqdn }}/{{ item.share }}
  when: item.is_personal | default(false)
  loop: "{{ exports }}"

- name: "Set selinux booleans"
  seboolean:
    name: samba_export_all_rw
    state: true
    persistent: true

- name: "Start services"
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - nfs-server
    - smb
    - winbind
    - firewalld

- name: Open services in firewall
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
    - samba
    - nfs
