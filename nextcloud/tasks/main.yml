# https://technixleo.com/install-nextcloud-on-centos-alma-rhel/
# The current PHP memory limit is below the recommended value of 512MB.
# https://nextcloud-mail.readthedocs.io/en/v0.18.0/admin/

- block:
  - name: "Find remi.repo"
    stat:
      path: /etc/yum.repos.d/remi.repo
    register: stat_remi_repo

  - name: "Add PHP remi repo"
    dnf:
      name: "{{ php_remi_repo }}"
      disable_gpg_check: yes
    when:
      - php_remi_repo != ""
      - not stat_remi_repo.stat.exists

  - name: "Add Collabora rpm key"
    rpm_key:
      state: present
      key: https://www.collaboraoffice.com/repos/CollaboraOnline/CODE-rpm/repodata/repomd.xml.key

  - name: "Add Collabora repo"
    yum_repository:
      name: collabora-online
      baseurl: https://www.collaboraoffice.com/repos/CollaboraOnline/CODE-rpm
      description: "Collabora Online Development Edition"
  when: foreman['organization'] is not defined

- name: "Find remi module"
  shell: 'dnf module list --enabled | grep -q "php *remi-{{ php_remi_release }}"'
  register: find_remi_module
  changed_when: no
  ignore_errors: yes

- name: "Install php remi {{ php_remi_release }}"
  command: "dnf -y module enable php:remi-{{ php_remi_release }}"
  when: find_remi_module.rc != 0

- name: "Install packages {{ packages_nextcloud | join(', ') }}"
  dnf:
    name: "{{ packages_nextcloud }}"
    state: latest

- name: "setfcontext for {{ nextcloud_folder }}"
  sefcontext:
    target: "{{ nextcloud_folder }}(/.*)"
    setype: httpd_sys_content_t

- name: "setfcontext for {{ nextcloud_folder}}'s subfolders"
  sefcontext:
    target: "{{ item }}"
    setype: httpd_sys_rw_content_t
  loop:
    - '{{ nextcloud_folder }}/data(/.*)?'
    - '{{ nextcloud_folder }}/config(/.*)?'
    - '{{ nextcloud_folder }}/apps(/.*)?'
    - '{{ nextcloud_folder }}/.htaccess'
    - '{{ nextcloud_folder }}/.user.ini'
    - '{{ nextcloud_folder }}/3rdparty/aws/aws-sdk-php/src/data/logs(/.*)?'
  notify: relabel_nextcloud

- name: "Create nextcloud folder {{ nextcloud_occ }}"
  stat:
    path: "{{ nextcloud_occ }}"
  register: stat_nextcloud
  changed_when: no

- name: "Create email users {{ nextcloud_ipa_users.keys() | list }}"
  vars:
    ansible_python_interpreter: "{{ is_realmproxy | ternary('/usr/bin/python3.9', '/usr/bin/python3') }}"
  freeipa.ansible_freeipa.ipauser:
    ipaadmin_password: "{{ ipaadmin_password | default(omit) }}"
    name: "{{ item.value.name }}"
    password: "{{ item.value.password }}"
    passwordexpiration: "2050-12-31"
    email: "{{ item.value.mail | default(omit) }}"
    first: "{{ item.value.givenname }}"
    last: "{{ item.value.sn }}"
    update_password: on_create
  with_dict: "{{ nextcloud_ipa_users }}"
  delegate_to: "{{ (ipaadmin_password is not defined) | ternary('127.0.0.1', omit) }}"
  become: no
  environment: "{{ env_ipa_on_server }}"

- name: "Download and install software"
  block:
    - name: "Download software"
      get_url:
        url: https://download.nextcloud.com/server/releases/latest-{{ nextcloud_release }}.zip
        dest: /tmp

    - name: "Unpack software"
      unarchive:
        src: /tmp/latest-{{ nextcloud_release }}.zip
        dest: "{{ (nextcloud_folder | split('/'))[:-1] | join('/')}}"
        remote_src: yes

    - name: "Remove tmp file"
      file:
        name: /tmp/latest-{{ nextcloud_release }}.zip
        state: absent

    - name: "chown apache"
      file:
        name: "{{ nextcloud_folder }}"
        owner: apache
        group: apache
        recurse: yes
  when: not stat_nextcloud.stat.exists

- name: "configure php.ini"
  vars:
    settings:
      expose_php: "Off"
      max_execution_time: "360"
      max_input_time: "180"
      memory_limit: "-1"
      upload_max_filesize: "1024M"
  ini_file:
    path: /etc/php.ini
    section: PHP
    option: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop: "{{ settings | dict2items }}"

- name: "configure php.d/10-opcache.ini"
  ini_file:
    path: /etc/php.d/10-opcache.ini
    section:
    option: opcache.interned_strings_buffer
    value: "32"

- name: "nextcloud: configure php apcu.ini"
  ini_file:
    path: /etc/php.d/40-apcu.ini
    option: "apc.enable_cli"
    value: "1"

- name: "Create folder {{ coolwsd_ssl_dir }}"
  file:
    path: "{{ coolwsd_ssl_dir }}"
    state: directory

- name: "Get SSL certificate for coolwsd"
  command:
    cmd: >-
        ipa-getcert request
            --keyfile {{ coolwsd_ssl_key}}
            --certfile {{ coolwsd_ssl_cert }}
            --key-owner cool
            --cert-owner cool
            --principal HTTP/{{ ansible_fqdn }}
            --dns {{ nextcloud_fqdn }}
            --wait
    creates: "{{ coolwsd_ssl_cert }}"
  environment: "{{ env_ipa_on_host }}"
  notify: restart_coolwsd

- name: "Configure coolwsd"
  xml:
    path: /etc/coolwsd/coolwsd.xml
    xpath: "/config/{{ item.key | replace('.','/') }}"
    value: "{{ item.value }}"
  with_dict: "{{ coolwsd_config }}"
  notify: restart_coolwsd

- name: "Start services"
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - mysqld
    - php-fpm
    - redis
    - coolwsd

- name: "Set some selinux booleans => On"
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  loop:
    - httpd_can_network_connect
    - httpd_unified

- name: "Create database"
  mysql_db:
    name: "{{ nextcloud_db_name }}"

- name: "Create DB user"
  mysql_user:
    name: "{{ nextcloud_db_user }}"
    priv: "nextcloud.*:ALL"
    password: "{{ nextcloud_db_password }}"

- name: "Make occ executable"
  file:
    path: "{{ nextcloud_occ }}"
    mode: 0755

- name: "copy apache config"
  template:
    src: nextcloud.conf
    dest: /etc/httpd/conf.d/{{ nextcloud_fqdn }}.conf.inc
  notify: restart_httpd

- name: "Setup nextcloud with occ"
  become: yes
  become_user: apache
  command:
    cmd: >-
        {{ nextcloud_occ }} maintenance:install
            --database=mysql
            --database-name={{ nextcloud_db_name }}
            --database-host=localhost
            --database-user={{ nextcloud_db_user }}
            --database-pass={{ nextcloud_db_password }}
            --admin-user={{ nextcloud_admin_user }}
            --admin-pass={{ nextcloud_admin_password }}
            --data-dir={{ nextcloud_folder }}/data
    creates: "{{ nextcloud_folder }}/config/config.php"

- name: "Add missing indices"
  command:
    cmd: "{{ nextcloud_occ }} db:add-missing-indices"
  register: ret_add_missing_indices
  changed_when: ret_add_missing_indices.stdout | length > 0

- name: "Repair"
  command:
    cmd: "{{ nextcloud_occ }} maintenance:repair --include-expensive"
  changed_when: no

# see https://blog.effenberger.org/2018/07/09/nextcloud-installation-via-command-line/
- name: "config system"
  become: yes
  become_user: apache
  command: >-
    {{ nextcloud_occ }}
        config:system:set
        {{ item.key }}
        {{ item.type is defined | ternary(item.type, "") }}
        --value='{{ item.value }}'
  with_items: "{{ nextcloud_system_config }}"

- name: "setup crontab"
  cron:
    name: nextcloud
    user: apache
    job: "php -f {{ nextcloud_folder }}/cron.php"
    minute: "*/5"

#- name: "Update .htaccess"
#  copy:
#    src: nextcloud_htaccess
#    dest: "{{ nextcloud_folder }}/.htaccess"

- name: "create symlink ocm-provider"
  file:
    path: "{{ nextcloud_folder }}/ocm-provider"
    src: "{{ nextcloud_folder }}/ocs-provider"
    state: link

- name: "Get admin's display name"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} user:setting nc-admin settings display_name"
  register: admin_displayname
  changed_when: no

- name: "Set admin's display name"
  become: yes
  become_user: apache
  command: >-
    {{ nextcloud_occ }}
        user:setting {{ nextcloud_admin_user }}
        settings display_name '{{ nextcloud_admin_displayname }}'
  when: admin_displayname.stdout != nextcloud_admin_displayname

- name: "Get admin's email address"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} user:setting nc-admin settings email"
  register: admin_email
  changed_when: no
  ignore_errors: yes

- name: "Set admin's email address"
  become: yes
  become_user: apache
  command: >-
    {{ nextcloud_occ }}
        user:setting {{ nextcloud_admin_user }}
        settings display_name '{{ nextcloud_ipa_users.mail.mail }}'
  when: admin_email.stdout != nextcloud_ipa_users.mail.mail

- name: "Find installed apps"
  find:
    recurse: no
    paths: "{{ nextcloud_folder }}/apps"
    file_type: directory
  register: installed_apps

- name: "get installed apps"
  set_fact:
    installed_apps: >-
        {{
            installed_apps.files
            | selectattr("path", "defined")
            | map(attribute='path')
            | map('regex_replace', '^.*/', '')
        }}

- name: "Install apps"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} app:install {{ item }}"
  with_items: "{{ nextcloud_install_apps }}"
  when: not item in installed_apps

- name: "Enable apps"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} app:enable {{ item }}"
  with_items: "{{ nextcloud_enable_apps }}"

- name: "Configure app core"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} config:app:set --value={{ item.value }} core {{ item.key }}"
  with_items:
    - { key: backgroundjobs_mode, value: cron }

- name: "Configure app user_saml"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} saml:config:set --general-uid_mapping REMOTE_USER 1"

- name: "Configure app user_saml (2)"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} config:app:set user_saml {{ item.key}} --value {{ item.value }}"
  with_items: "{{ nextcloud_user_saml_config | dict2items }}"

- name: "Find ldap config"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} ldap:show-config --output=json --show-password"
  register: nc_ldap_config
  changed_when: false

- set_fact:
    current_ldap_config: "{{ nc_ldap_config.stdout | from_json }}"

- name: "Create ldap config"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} ldap:create-empty-config"
  when: nc_ldap_config.stdout | from_json | length == 0

- name: "Configure app user_ldap"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} ldap:set-config s01 {{ item.key }} '{{ item.value }}'"
  with_items: "{{ nextcloud_ldap_config | dict2items }}"
  when: >
    nc_ldap_config.stdout | length == 0
    or
    current_ldap_config.s01[item.key] is not defined
    or
    current_ldap_config.s01[item.key] != item.value

- name: "Test app user_ldap"
  become: yes
  become_user: apache
  command: "{{ nextcloud_occ }} ldap:test-config s01"

- name: "Install fail2ban filter"
  copy:
    src: nextcloud.conf
    dest: /etc/fail2ban/filter.d
  notify: restart_fail2ban

- name: "Install nextcloud.local"
  template:
    src: nextcloud.local
    dest: /etc/fail2ban/jail.d
  notify: restart_fail2ban

- name: "copy nextcloud.te"
  copy:
    src: nextcloud.te
    dest: /var/local/selinux-modules
  notify: selinux_module_nextcloud
