- name: "DNS lookup {{ ansible_domain }}/MX"
  shell: "host -t mx {{ ansible_domain }} | tail -1 | awk '{ print substr($NF, 1, length($NF)-1); }'"
  register: mx_record
  changed_when: no

- name: "DNS lookup _ldap._tcp.{{ ansible_domain }}/SRV"
  shell: "host -t srv _ldap._tcp.{{ ansible_domain }} | awk '{ print substr($NF, 1, length($NF)-1); }'"
  register: ldap_record
  changed_when: no

- name: "DNS lookup ipa-ca.{{ ansible_domain }}"
  shell: >-
    for ip in $(
        host ipa-ca.{{ ansible_domain }} |
        grep "has address" |
        tail -1 |
        awk '{ print $NF; }'
    ); do
      host $ip | awk '{ print substr($NF, 1, length($NF)-1); }'
    done
  register: ipa_server_record
  changed_when: no

- name: "Set facts based on DNS records"
  set_fact:
    mail_server: "{{ mail_server if mail_server is defined else mx_record.stdout }}"
    ipa_server: "{{ ipa_server if ipa_server is defined else ipa_server_record.stdout }}"
    ldap_servers: "{{ ldap_servers if ldap_servers is defined else ldap_record.stdout_lines | sort }}"
    organization: "{{ foreman['organization'] if foreman is defined else ansible_domain }}"

    ldap_base_dn: >-
        {%-
            if ldap_base_dn is not defined
                or ldap_base_dn | type_debug == 'NoneType'
                or ldap_base_dn == ''
        -%}
            {{
                ansible_domain.split('.') |
                    map('regex_replace', '^', 'dc=') |
                    list |
                    join(',')
            }}
        {%- else -%}
            {{ ldap_base_dn }}
        {%- endif -%}

- name: Find name of system volume group
  set_fact:
    system_volume_group: "{{ (ansible_lvm.vgs | dict2items | first).key }}"
  when:
   - ansible_lvm.vgs is defined
   - ansible_lvm.vgs | length > 0
