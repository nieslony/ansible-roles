- name: "DNS lookup {{ ansible_domain }}/MX"
  shell: "host -t mx {{ ansible_domain }} | tail -1 | awk '{ print substr($NF, 1, length($NF)-1); }'"
  register: mx_record
  changed_when: no

- name: "DNS lookup _ldap._tcp.{{ ansible_domain }}/SRV"
  shell: "host -t srv _ldap._tcp.{{ ansible_domain }} | awk '/has SRV record/ { print substr($NF, 1, length($NF)-1); }'"
  register: ldap_record
  changed_when: no

- name: "DNS lookup ipa-ca.{{ ansible_domain }}"
  shell: >-
    for ip in $(
        host ipa-ca.{{ ansible_domain }} |
        grep "has address" |
        tail -1 |
        awk '{ print $NF; }'
    ); do
      host $ip | awk '{ print substr($NF, 1, length($NF)-1); }'
    done
  register: ipa_server_record
  changed_when: no

- name: "Set facts based on DNS records"
  set_fact:
    mail_server: "{{ mail_server if mail_server is defined else mx_record.stdout }}"
    ipa_server: "{{ ipa_server if ipa_server is defined else ipa_server_record.stdout }}"
    ldap_servers: "{{ ldap_servers if ldap_servers is defined else ldap_record.stdout_lines | sort }}"
    organization: "{{ foreman['organization'] if foreman is defined else ansible_domain }}"

    ldap_base_dn: >-
        {%-
            if ldap_base_dn is not defined
                or ldap_base_dn | type_debug == 'NoneType'
                or ldap_base_dn == ''
        -%}
            {{
                ansible_domain.split('.') |
                    map('regex_replace', '^', 'dc=') |
                    list |
                    join(',')
            }}
        {%- else -%}
            {{ ldap_base_dn }}
        {%- endif -%}

- name: Find name of system volume group
  set_fact:
    system_volume_group: "{{ (ansible_lvm.vgs | dict2items | first).key }}"
  when:
   - ansible_lvm.vgs is defined
   - ansible_lvm.vgs | length > 0

- set_fact:
    realm_keytab: /etc/foreman-proxy/freeipa.keytab

- name: "Find {{ realm_keytab }}"
  stat:
    path: "{{ realm_keytab }}"
  when: ipaadmin_password is not defined
  delegate_to: 127.0.0.1
  become: false
  register: stat_freeipa_keytab

- set_fact:
    is_realmproxy: "{{ stat_freeipa_keytab.stat is defined and stat_freeipa_keytab.stat.exists }}"

- name: "Find ipa domains"
  shell:
    cmd: |
        kinit -k
        ipa dnszone-find --raw |
            awk -F ": *" '
                /idnsname/ { gsub(/\.$/, "", $2); if (! /.in-addr.arpa/) print $2; }
            '
        kdestroy
  register: ipa_domains_ret

- name: "Set IPA domains {{ ipa_domains_ret.stdout_lines | join(', ') }}"
  set_fact:
    ipa_dns_domains: "{{ ipa_domains_ret.stdout_lines }}"

- name: "Exported variables"
  debug:
    var: "{{ item }}"
  loop:
    - mx_record
    - ldap_record
    - ipa_server_record
    - mail_server
    - ipa_server
    - ldap_servers
    - ldap_base_dn
    - organization
    - is_realmproxy
    - ipa_dns_domains
    - realm_keytab
    - system_volume_group
