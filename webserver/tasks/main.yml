# tasks file for webserver
- name: Import facts
  import_tasks: "../../default_facts/default_facts.yml"

- name: Create logocal volume
  block:
    - name: Create volume
      lvol:
        vg: "{{ lvm_volgroup }}"
        lv: "{{ lvm_volume }}"
        size: "{{ lvm_volsize_gb }}"

    - name: Create filesystem
      filesystem:
        fstype: xfs
        dev: "/dev/{{ lvm_volgroup }}/{{ lvm_volume }}"

    - name: Mount file system
      mount:
        path: /var/www
        src: "/dev/{{ lvm_volgroup }}/{{ lvm_volume }}"
        state: mounted
  when: lvm_volsize_gb > 0

- name: "Install packages: {{ packages | join(', ') }}"
  package:
    name: "{{ packages }}"
    state: latest

- name: "Create group apache"
  group:
    name: apache
    system: yes

- name: "Create apache user"
  user:
    name: apache
    create_home: no
    group: apache
    home: /usr/share/httpd
    shell: /sbin/nologin
    system: yes

- name: "Create CNAMES and host objects remote"
  block:
    - name: "Create CNAMES for vhosts {{ vhosts }}"
      ipadnsrecord:
        ipaadmin_password: "{{ ipaadmin_password }}"
        zone_name: "{{ item.split('.')[1:] | join('.') }}"
        record_type: CNAME
        cname_hostname: "{{ ansible_fqdn }}."
        name: "{{ item | split('.') | first }}"
      when: item != ansible_fqdn
      loop: "{{ vhosts }}"

    - name: "Create host objects {{ vhosts }}"
      ipahost:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "{{ item }}"
        managedby_host: "{{ ansible_fqdn }}"
        state: present
        random: yes
        update_password: on_create
      when: item != ansible_fqdn
      loop: "{{ vhosts }}"
  when: ipaadmin_password is defined

- name: "Create service HTTP/{{ ansible_fqdn }} on {{ ipa_server }}"
  ipa_service:
    name: "HTTP/{{ ansible_fqdn }}"
    ipa_host: "{{ ipa_server }}"
  environment:
    KRB5_CLIENT_KTNAME: /etc/krb5.keytab
    http_proxy: ""
    https_proxy: ""

- name: "Get keytab"
  shell:
    cmd: |
        kinit -k
        ipa-getkeytab -p HTTP/{{ ansible_fqdn }} -k /etc/httpd/krb5.keytab
        kdestroy
    creates: /etc/httpd/krb5.keytab

- name: "Chown keytab"
  file:
    path: /etc/httpd/krb5.keytab
    owner: apache
    mode: 0600

- name: "Get SSL certificate for webserver"
  command:
    cmd: |
        ipa-getcert request
            --keyfile {{ ssl_key_file }}
            --certfile {{ ssl_cert_file }}
            --key-owner apache
            --cert-owner apache
            --principal host/{{ ansible_fqdn }}
            --dns {{ (vhosts + [ansible_fqdn]) | unique | join(' --dns ') }}
            --wait
    creates: "{{ ssl_cert_file }}"
  environment:
    KRB5_CLIENT_KTNAME: /etc/krb5.keytab
  notify: restart_httpd

- name: Copy default_vhost.conf
  copy:
    src: default_vhost.conf
    dest: /etc/httpd/conf.d/default_vhost.conf
  notify: restart_httpd

- name: Create document root for vhosts
  file:
    path: "/var/www/html/{{ item }}"
    state: directory
  loop: "{{ vhosts }}"

- name: Copy vhost configuration files
  template:
    src: vhost.conf
    dest: /etc/httpd/conf.d/{{ item }}.conf
  loop: "{{ vhosts }}"
  notify: restart_httpd

- name: Find ssl.conf
  stat:
    path: /etc/httpd/conf.d/ssl.conf
  register: stat_ssl_conf
  changed_when: no

- name: "Rename ssl.conf"
  command:
    cmd: mv /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.disabled
    creates: /etc/httpd/conf.d/ssl.conf.disabled
  when: stat_ssl_conf.stat.exists
  notify: restart_httpd

- name: Open http/https in firewall
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
    - http
    - https

- name: Enable and start httpd
  service:
    name: httpd
    enabled: yes
    state: started
